<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Base style for circular toggle buttons -->
    <Style x:Key="BaseCircleButton" TargetType="ToggleButton">
        <Setter Property="Width" Value="42"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Background" Value="{DynamicResource B_SurfaceNeutral}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource B_Border}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <!-- Outer glow/border circle -->
                        <Ellipse 
                            x:Name="OuterCircle"
                            Fill="{TemplateBinding BorderBrush}"/>

                        <!-- Inner face circle -->
                        <Ellipse 
                            Width="36" Height="36"
                            Fill="{TemplateBinding Background}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Ellipse.Effect>
                                <DropShadowEffect 
                                    Color="Gray" 
                                    BlurRadius="8" 
                                    ShadowDepth="0" 
                                    Opacity="0.7"/>
                            </Ellipse.Effect>
                        </Ellipse>

                        <ContentPresenter 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Static non-toggle version (if needed elsewhere) -->
    <Style x:Key="StaticButton" TargetType="Button" BasedOn="{StaticResource BaseCircleButton}" />

    <!-- ToggleButton with dynamic border color -->
    <Style x:Key="CircleButton" TargetType="ToggleButton" BasedOn="{StaticResource BaseCircleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource B_Active}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource B_Inactive}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Flat hover button style for normal rectangular buttons -->
    <Style x:Key="HoverButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource B_Surface}" />
        <Setter Property="Foreground" Value="{DynamicResource B_Text}" />
        <Setter Property="BorderBrush" Value="{DynamicResource B_BackgroundPrimary}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource B_SurfaceHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SelectButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource B_Surface}" />
        <Setter Property="Foreground" Value="{DynamicResource B_Text}" />
        <Setter Property="BorderBrush" Value="{DynamicResource B_BackgroundPrimary}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource B_SurfaceHover}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource B_SurfaceSelect}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
